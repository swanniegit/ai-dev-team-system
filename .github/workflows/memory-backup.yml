name: Memory System Backup

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  backup-memory:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install boto3 google-cloud-storage azure-storage-blob
    
    - name: Configure AWS credentials
      if: env.AWS_ACCESS_KEY_ID != ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Configure Google Cloud credentials
      if: env.GOOGLE_APPLICATION_CREDENTIALS != ''
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    
    - name: Configure Azure credentials
      if: env.AZURE_CLIENT_ID != ''
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Run memory backup
      env:
        POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        AZURE_CONTAINER: ${{ secrets.AZURE_CONTAINER }}
        AZURE_CONNECTION_STRING: ${{ secrets.AZURE_CONNECTION_STRING }}
      run: |
        python scripts/backup_memory.py \
          --backup-dir ./backups \
          --postgres-url "$POSTGRES_URL" \
          --mongodb-url "$MONGODB_URL" \
          --redis-url "$REDIS_URL" \
          --upload-to-s3 \
          --upload-to-gcs \
          --upload-to-azure
    
    - name: Upload backup artifacts
      uses: actions/upload-artifact@v4
      with:
        name: memory-backup-${{ github.run_number }}
        path: ./backups/
        retention-days: 30
    
    - name: Create backup summary
      run: |
        echo "## Memory Backup Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Backup Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Backup Files:**" >> $GITHUB_STEP_SUMMARY
        ls -la ./backups/ >> $GITHUB_STEP_SUMMARY
        echo "**Total Size:** $(du -sh ./backups/ | cut -f1)" >> $GITHUB_STEP_SUMMARY

  notify-backup:
    runs-on: ubuntu-latest
    needs: backup-memory
    if: always()
    
    steps:
    - name: Notify backup completion
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ needs.backup-memory.result }}
        channel: '#backups'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: |
          Memory backup ${{ needs.backup-memory.result == 'success' && 'completed successfully' || 'failed' }}
          Run: ${{ github.run_number }}
          Repository: ${{ github.repository }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} 